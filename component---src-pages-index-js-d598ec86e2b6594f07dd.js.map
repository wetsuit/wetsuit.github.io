{"version":3,"sources":["webpack://wetsuit/./src/components/Filter.tsx","webpack://wetsuit/./src/components/Tile.tsx","webpack://wetsuit/./src/pages/index.js"],"names":["props","onChange","onFilterChange","type","defaultChecked","id","name","value","className","htmlFor","product","imageUrl","title","getTitle","notes","condition","feature","src","PLACEHOLDER_IMAGE_URL","alt","price","BuyButton","Link","to","toLowerCase","resp","images","data","useState","filter","setFilter","imageUrlMap","Map","forEach","edge","set","products","Layout","e","target","p","category","map","get","key"],"mappings":"kKA4CA,EA1Ce,SAAAA,GACb,OACE,2BACE,wBAAMC,SAAUD,EAAME,gBACpB,yBACEC,KAAK,QACLC,gBAAc,EACdC,GAAG,MACHC,KAAK,WACLC,MAAM,MACNC,UAAU,SAEZ,yBAAOC,QAAQ,OAAf,OACA,yBACEN,KAAK,QACLE,GAAG,MACHC,KAAK,WACLC,MAAM,MACNC,UAAU,cAEZ,yBAAOC,QAAQ,OAAf,OACA,yBACEN,KAAK,QACLE,GAAG,QACHC,KAAK,WACLC,MAAM,QACNC,UAAU,cAEZ,yBAAOC,QAAQ,SAAf,SACA,yBACEN,KAAK,QACLE,GAAG,QACHC,KAAK,WACLC,MAAM,QACNC,UAAU,cAEZ,yBAAOC,QAAQ,SAAf,Y,kDCwBR,EAnDa,SAACT,GACZ,IAAQU,EAAsBV,EAAtBU,QAASC,EAAaX,EAAbW,SACXC,GAAQC,QAASH,GAEnBI,EAAQJ,EAAQK,UAAYL,EAAQK,UAAY,GAQpD,OAPIL,EAAQM,UACNN,EAAQK,YACVD,GAAS,MAEXA,GAASJ,EAAQM,SAIjB,uBAAKR,UAAU,iCACb,uBAAKA,UAAU,2BACb,uBACES,IAAKN,GAAYO,KACjBC,IAAKP,EACLJ,UAAU,4DAGd,uBAAKA,UAAU,iBACb,uBAAKA,UAAU,kBACb,sBAAIA,UAAU,mCAAmCI,GACjD,uBAAKJ,UAAU,uCACZE,EAAQU,OAAR,IAAqBV,EAAQU,OAEhC,uBAAKZ,UAAU,2DACZM,IAGL,uBAAKN,UAAU,2CACb,wBAAMA,UAAU,8BACd,gBAACa,EAAA,EAAD,CAAWT,MAAOA,KAEpB,wBAAMJ,UAAU,yBACd,gBAAC,EAAAc,KAAD,CAAMC,GAAE,YAAcb,EAAQL,GAAGmB,eAC/B,0BACEhB,UAAU,kDACVL,KAAK,UAFP,sBCbd,EAnBkB,SAAC,GAAc,IARRsB,EACjBC,EAOaC,EAAW,EAAXA,KACnB,GAA4BC,cAAS,OAA9BC,EAAP,KAAeC,EAAf,KACMC,GAViBN,EAUcE,EAT/BD,EAAS,IAAIM,IACnBP,EAAI,OAAJ,MAAwBQ,SAAQ,SAAAC,GAC9BR,EAAOS,IAAID,EAAI,KAAJ,kBAAmCA,EAAI,KAAJ,cAEzCR,GAMDU,EAAWT,EAAI,SAAJ,MAEjB,OACE,gBAACU,EAAA,EAAD,KACE,gBAAC,IAAD,CAAKzB,MAAM,SACX,mDACA,gBAAC,EAAD,CAAQV,eAAgB,SAAAoC,GAAC,OAAIR,EAAUQ,EAAEC,OAAOlC,OAC/C+B,EACEP,QAAO,SAAAW,GAAC,MAAe,QAAXX,GAAoBW,EAAEC,WAAaZ,KAC/Ca,KAAI,SAAAF,GAAC,OACJ,gBAAC,EAAD,CAAM9B,QAAS8B,EAAG7B,SAAUoB,EAAYY,IAAIH,EAAEnC,IAAKuC,IAAKJ,EAAEnC","file":"component---src-pages-index-js-d598ec86e2b6594f07dd.js","sourcesContent":["import * as React from \"react\";\n\nconst Filter = props => {\n  return (\n    <div>\n      <form onChange={props.onFilterChange}>\n        <input\n          type=\"radio\"\n          defaultChecked\n          id=\"All\"\n          name=\"category\"\n          value=\"All\"\n          className=\"mr-1\"\n        />\n        <label htmlFor=\"All\">All</label>\n        <input\n          type=\"radio\"\n          id=\"Men\"\n          name=\"category\"\n          value=\"Men\"\n          className=\"ml-2 mr-1\"\n        />\n        <label htmlFor=\"Men\">Men</label>\n        <input\n          type=\"radio\"\n          id=\"Women\"\n          name=\"category\"\n          value=\"Women\"\n          className=\"ml-2 mr-1\"\n        />\n        <label htmlFor=\"Women\">Women</label>\n        <input\n          type=\"radio\"\n          id=\"Youth\"\n          name=\"category\"\n          value=\"Youth\"\n          className=\"ml-2 mr-1\"\n        />\n        <label htmlFor=\"Youth\">Youth</label>\n      </form>\n    </div>\n  );\n};\n\nexport default Filter;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { Wetsuit } from \"../common/types\";\nimport { getTitle, PLACEHOLDER_IMAGE_URL } from \"../common/util\";\nimport BuyButton from \"./BuyButton\";\n\ninterface TileProps {\n  product: Wetsuit;\n  imageUrl: string;\n}\n\nconst Tile = (props: TileProps) => {\n  const { product, imageUrl } = props;\n  const title = getTitle(product);\n\n  let notes = product.condition ? product.condition : \"\";\n  if (product.feature) {\n    if (product.condition) {\n      notes += \", \";\n    }\n    notes += product.feature;\n  }\n\n  return (\n    <div className=\"flex rounded-lg my-2 bg-white\">\n      <div className=\"flex-none w-48 relative\">\n        <img\n          src={imageUrl || PLACEHOLDER_IMAGE_URL}\n          alt={title}\n          className=\"absolute inset-0 w-full h-full object-cover rounded-lg\"\n        />\n      </div>\n      <div className=\"flex-auto p-6\">\n        <div className=\"flex flex-wrap\">\n          <h1 className=\"flex-auto text-xl font-semibold\">{title}</h1>\n          <div className=\"text-xl font-semibold text-gray-500\">\n            {product.price && `$${product.price}`}\n          </div>\n          <div className=\"w-full flex-none text-sm font-medium text-gray-500 my-2\">\n            {notes}\n          </div>\n        </div>\n        <div className=\"flex flex-wrap my-2 text-sm font-medium\">\n          <span className=\"w-5/12 min-w-140 mb-1 mr-2\">\n            <BuyButton title={title} />\n          </span>\n          <span className=\"w-5/12\th-9 min-w-140\">\n            <Link to={`/product/${product.id.toLowerCase()}`}>\n              <button\n                className=\"w-full h-full rounded-sm border border-gray-300\"\n                type=\"button\"\n              >\n                More details\n              </button>\n            </Link>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tile;\n","import React, { useState } from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Filter from \"../components/Filter\";\nimport Layout from \"../components/Layout\";\nimport Seo from \"../components/seo\";\nimport Tile from \"../components/Tile\";\n\nconst buildImageUrlMap = resp => {\n  const images = new Map();\n  resp[\"images\"][\"edges\"].forEach(edge => {\n    images.set(edge[\"node\"][\"relativeDirectory\"], edge[\"node\"][\"publicURL\"]);\n  });\n  return images;\n};\n\nconst IndexPage = ({ data }) => {\n  const [filter, setFilter] = useState(\"All\");\n  const imageUrlMap = buildImageUrlMap(data);\n  const products = data[\"products\"][\"nodes\"];\n  \n  return (\n    <Layout>\n      <Seo title=\"Home\" />\n      <h1>Our current inventory</h1>\n      <Filter onFilterChange={e => setFilter(e.target.id)} />\n      {products\n        .filter(p => filter === \"All\" || p.category === filter) // todo: refactor\n        .map(p => (\n          <Tile product={p} imageUrl={imageUrlMap.get(p.id)} key={p.id} />\n        ))}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  {\n    images: allFile(filter: { name: { eq: \"1\" } }) {\n      edges {\n        node {\n          publicURL\n          relativeDirectory\n        }\n      }\n    }\n    products: allInventoryXlsxWetsuits {\n      nodes {\n        brand\n        category\n        color\n        condition\n        feature\n        hooded\n        id\n        price\n        size\n        thickness\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}